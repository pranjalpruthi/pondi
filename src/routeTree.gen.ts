/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EventsImport } from './routes/events'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as IndexImport } from './routes/index'
import { Route as TermsAndConditionsIndexImport } from './routes/terms-and-conditions/index'
import { Route as ShopIndexImport } from './routes/shop/index'
import { Route as RefundAndCancellationPolicyIndexImport } from './routes/refund-and-cancellation-policy/index'
import { Route as PrivacyPolicyIndexImport } from './routes/privacy-policy/index'
import { Route as DonateIndexImport } from './routes/donate/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as ComingSoonIndexImport } from './routes/coming-soon/index'
import { Route as CentersIndexImport } from './routes/centers/index'
import { Route as CalenderIndexImport } from './routes/calender/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'

// Create/Update Routes

const EventsRoute = EventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TermsAndConditionsIndexRoute = TermsAndConditionsIndexImport.update({
  id: '/terms-and-conditions/',
  path: '/terms-and-conditions/',
  getParentRoute: () => rootRoute,
} as any)

const ShopIndexRoute = ShopIndexImport.update({
  id: '/shop/',
  path: '/shop/',
  getParentRoute: () => rootRoute,
} as any)

const RefundAndCancellationPolicyIndexRoute =
  RefundAndCancellationPolicyIndexImport.update({
    id: '/refund-and-cancellation-policy/',
    path: '/refund-and-cancellation-policy/',
    getParentRoute: () => rootRoute,
  } as any)

const PrivacyPolicyIndexRoute = PrivacyPolicyIndexImport.update({
  id: '/privacy-policy/',
  path: '/privacy-policy/',
  getParentRoute: () => rootRoute,
} as any)

const DonateIndexRoute = DonateIndexImport.update({
  id: '/donate/',
  path: '/donate/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const ComingSoonIndexRoute = ComingSoonIndexImport.update({
  id: '/coming-soon/',
  path: '/coming-soon/',
  getParentRoute: () => rootRoute,
} as any)

const CentersIndexRoute = CentersIndexImport.update({
  id: '/centers/',
  path: '/centers/',
  getParentRoute: () => rootRoute,
} as any)

const CalenderIndexRoute = CalenderIndexImport.update({
  id: '/calender/',
  path: '/calender/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/calender/': {
      id: '/calender/'
      path: '/calender'
      fullPath: '/calender'
      preLoaderRoute: typeof CalenderIndexImport
      parentRoute: typeof rootRoute
    }
    '/centers/': {
      id: '/centers/'
      path: '/centers'
      fullPath: '/centers'
      preLoaderRoute: typeof CentersIndexImport
      parentRoute: typeof rootRoute
    }
    '/coming-soon/': {
      id: '/coming-soon/'
      path: '/coming-soon'
      fullPath: '/coming-soon'
      preLoaderRoute: typeof ComingSoonIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/donate/': {
      id: '/donate/'
      path: '/donate'
      fullPath: '/donate'
      preLoaderRoute: typeof DonateIndexImport
      parentRoute: typeof rootRoute
    }
    '/privacy-policy/': {
      id: '/privacy-policy/'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyIndexImport
      parentRoute: typeof rootRoute
    }
    '/refund-and-cancellation-policy/': {
      id: '/refund-and-cancellation-policy/'
      path: '/refund-and-cancellation-policy'
      fullPath: '/refund-and-cancellation-policy'
      preLoaderRoute: typeof RefundAndCancellationPolicyIndexImport
      parentRoute: typeof rootRoute
    }
    '/shop/': {
      id: '/shop/'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopIndexImport
      parentRoute: typeof rootRoute
    }
    '/terms-and-conditions/': {
      id: '/terms-and-conditions/'
      path: '/terms-and-conditions'
      fullPath: '/terms-and-conditions'
      preLoaderRoute: typeof TermsAndConditionsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/events': typeof EventsRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/about': typeof AboutIndexRoute
  '/calender': typeof CalenderIndexRoute
  '/centers': typeof CentersIndexRoute
  '/coming-soon': typeof ComingSoonIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/donate': typeof DonateIndexRoute
  '/privacy-policy': typeof PrivacyPolicyIndexRoute
  '/refund-and-cancellation-policy': typeof RefundAndCancellationPolicyIndexRoute
  '/shop': typeof ShopIndexRoute
  '/terms-and-conditions': typeof TermsAndConditionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/events': typeof EventsRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/about': typeof AboutIndexRoute
  '/calender': typeof CalenderIndexRoute
  '/centers': typeof CentersIndexRoute
  '/coming-soon': typeof ComingSoonIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/donate': typeof DonateIndexRoute
  '/privacy-policy': typeof PrivacyPolicyIndexRoute
  '/refund-and-cancellation-policy': typeof RefundAndCancellationPolicyIndexRoute
  '/shop': typeof ShopIndexRoute
  '/terms-and-conditions': typeof TermsAndConditionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/events': typeof EventsRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/about/': typeof AboutIndexRoute
  '/calender/': typeof CalenderIndexRoute
  '/centers/': typeof CentersIndexRoute
  '/coming-soon/': typeof ComingSoonIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/donate/': typeof DonateIndexRoute
  '/privacy-policy/': typeof PrivacyPolicyIndexRoute
  '/refund-and-cancellation-policy/': typeof RefundAndCancellationPolicyIndexRoute
  '/shop/': typeof ShopIndexRoute
  '/terms-and-conditions/': typeof TermsAndConditionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/events'
    | '/demo/tanstack-query'
    | '/about'
    | '/calender'
    | '/centers'
    | '/coming-soon'
    | '/dashboard/'
    | '/donate'
    | '/privacy-policy'
    | '/refund-and-cancellation-policy'
    | '/shop'
    | '/terms-and-conditions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/events'
    | '/demo/tanstack-query'
    | '/about'
    | '/calender'
    | '/centers'
    | '/coming-soon'
    | '/dashboard'
    | '/donate'
    | '/privacy-policy'
    | '/refund-and-cancellation-policy'
    | '/shop'
    | '/terms-and-conditions'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/events'
    | '/demo/tanstack-query'
    | '/about/'
    | '/calender/'
    | '/centers/'
    | '/coming-soon/'
    | '/dashboard/'
    | '/donate/'
    | '/privacy-policy/'
    | '/refund-and-cancellation-policy/'
    | '/shop/'
    | '/terms-and-conditions/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  EventsRoute: typeof EventsRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  AboutIndexRoute: typeof AboutIndexRoute
  CalenderIndexRoute: typeof CalenderIndexRoute
  CentersIndexRoute: typeof CentersIndexRoute
  ComingSoonIndexRoute: typeof ComingSoonIndexRoute
  DonateIndexRoute: typeof DonateIndexRoute
  PrivacyPolicyIndexRoute: typeof PrivacyPolicyIndexRoute
  RefundAndCancellationPolicyIndexRoute: typeof RefundAndCancellationPolicyIndexRoute
  ShopIndexRoute: typeof ShopIndexRoute
  TermsAndConditionsIndexRoute: typeof TermsAndConditionsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  EventsRoute: EventsRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  AboutIndexRoute: AboutIndexRoute,
  CalenderIndexRoute: CalenderIndexRoute,
  CentersIndexRoute: CentersIndexRoute,
  ComingSoonIndexRoute: ComingSoonIndexRoute,
  DonateIndexRoute: DonateIndexRoute,
  PrivacyPolicyIndexRoute: PrivacyPolicyIndexRoute,
  RefundAndCancellationPolicyIndexRoute: RefundAndCancellationPolicyIndexRoute,
  ShopIndexRoute: ShopIndexRoute,
  TermsAndConditionsIndexRoute: TermsAndConditionsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/events",
        "/demo/tanstack-query",
        "/about/",
        "/calender/",
        "/centers/",
        "/coming-soon/",
        "/donate/",
        "/privacy-policy/",
        "/refund-and-cancellation-policy/",
        "/shop/",
        "/terms-and-conditions/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/"
      ]
    },
    "/events": {
      "filePath": "events.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/calender/": {
      "filePath": "calender/index.tsx"
    },
    "/centers/": {
      "filePath": "centers/index.tsx"
    },
    "/coming-soon/": {
      "filePath": "coming-soon/index.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/donate/": {
      "filePath": "donate/index.tsx"
    },
    "/privacy-policy/": {
      "filePath": "privacy-policy/index.tsx"
    },
    "/refund-and-cancellation-policy/": {
      "filePath": "refund-and-cancellation-policy/index.tsx"
    },
    "/shop/": {
      "filePath": "shop/index.tsx"
    },
    "/terms-and-conditions/": {
      "filePath": "terms-and-conditions/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
